# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sample.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='sample.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0csample.proto\"[\n\tCandidate\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1d\n\x04rate\x18\x02 \x01(\x0e\x32\x0f.Candidate.Rate\"!\n\x04Rate\x12\x08\n\x04GOOD\x10\x00\x12\x06\n\x02OK\x10\x01\x12\x07\n\x03\x42\x41\x44\x10\x02\"%\n\x10\x43\x61ndidateRequest\x12\x11\n\trequester\x18\x01 \x01(\t\"A\n\x11\x43\x61ndidateResponse\x12\x0c\n\x04memo\x18\x01 \x01(\t\x12\x1e\n\ncandidates\x18\x02 \x03(\x0b\x32\n.Candidate2@\n\rSearchService\x12/\n\x06Search\x12\x11.CandidateRequest\x1a\x12.CandidateResponseb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_CANDIDATE_RATE = _descriptor.EnumDescriptor(
  name='Rate',
  full_name='Candidate.Rate',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GOOD', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OK', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=74,
  serialized_end=107,
)
_sym_db.RegisterEnumDescriptor(_CANDIDATE_RATE)


_CANDIDATE = _descriptor.Descriptor(
  name='Candidate',
  full_name='Candidate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Candidate.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rate', full_name='Candidate.rate', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CANDIDATE_RATE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=107,
)


_CANDIDATEREQUEST = _descriptor.Descriptor(
  name='CandidateRequest',
  full_name='CandidateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requester', full_name='CandidateRequest.requester', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=109,
  serialized_end=146,
)


_CANDIDATERESPONSE = _descriptor.Descriptor(
  name='CandidateResponse',
  full_name='CandidateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='memo', full_name='CandidateResponse.memo', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='candidates', full_name='CandidateResponse.candidates', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=213,
)

_CANDIDATE.fields_by_name['rate'].enum_type = _CANDIDATE_RATE
_CANDIDATE_RATE.containing_type = _CANDIDATE
_CANDIDATERESPONSE.fields_by_name['candidates'].message_type = _CANDIDATE
DESCRIPTOR.message_types_by_name['Candidate'] = _CANDIDATE
DESCRIPTOR.message_types_by_name['CandidateRequest'] = _CANDIDATEREQUEST
DESCRIPTOR.message_types_by_name['CandidateResponse'] = _CANDIDATERESPONSE

Candidate = _reflection.GeneratedProtocolMessageType('Candidate', (_message.Message,), dict(
  DESCRIPTOR = _CANDIDATE,
  __module__ = 'sample_pb2'
  # @@protoc_insertion_point(class_scope:Candidate)
  ))
_sym_db.RegisterMessage(Candidate)

CandidateRequest = _reflection.GeneratedProtocolMessageType('CandidateRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANDIDATEREQUEST,
  __module__ = 'sample_pb2'
  # @@protoc_insertion_point(class_scope:CandidateRequest)
  ))
_sym_db.RegisterMessage(CandidateRequest)

CandidateResponse = _reflection.GeneratedProtocolMessageType('CandidateResponse', (_message.Message,), dict(
  DESCRIPTOR = _CANDIDATERESPONSE,
  __module__ = 'sample_pb2'
  # @@protoc_insertion_point(class_scope:CandidateResponse)
  ))
_sym_db.RegisterMessage(CandidateResponse)


import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class SearchServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Search = channel.unary_unary(
        '/SearchService/Search',
        request_serializer=CandidateRequest.SerializeToString,
        response_deserializer=CandidateResponse.FromString,
        )


class SearchServiceServicer(object):

  def Search(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SearchServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Search': grpc.unary_unary_rpc_method_handler(
          servicer.Search,
          request_deserializer=CandidateRequest.FromString,
          response_serializer=CandidateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SearchService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaSearchServiceServicer(object):
  def Search(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaSearchServiceStub(object):
  def Search(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Search.future = None


def beta_create_SearchService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('SearchService', 'Search'): CandidateRequest.FromString,
  }
  response_serializers = {
    ('SearchService', 'Search'): CandidateResponse.SerializeToString,
  }
  method_implementations = {
    ('SearchService', 'Search'): face_utilities.unary_unary_inline(servicer.Search),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_SearchService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('SearchService', 'Search'): CandidateRequest.SerializeToString,
  }
  response_deserializers = {
    ('SearchService', 'Search'): CandidateResponse.FromString,
  }
  cardinalities = {
    'Search': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'SearchService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
